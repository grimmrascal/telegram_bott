import os
import asyncio
import random
from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.types import Message
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")
if not TOKEN:
    raise ValueError("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ñ–∞–π–ª .env.")

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ —ñ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()

# –°–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —è–∫—ñ –ø–æ—á–∞–ª–∏ —Ä–æ–±–æ—Ç—É –∑ –±–æ—Ç–æ–º
active_users = set()

# –ü—Ä–∏—î–º–Ω—ñ —Ñ—Ä–∞–∑–∏ –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏
phrases = [
    "üåü –ë–∞–∂–∞—é —Ç–æ–±—ñ —á—É–¥–æ–≤–æ–≥–æ –¥–Ω—è!",
    "üòä –ù–µ –∑–∞–±—É–≤–∞–π —É—Å–º—ñ—Ö–∞—Ç–∏—Å—è!",
    "üí™ –í—ñ—Ä —É —Å–µ–±–µ ‚Äì —Ç–∏ –º–æ–∂–µ—à —É—Å–µ!",
    "üåû –ì–∞—Ä–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ—é –Ω–∞ –≤–µ—Å—å –¥–µ–Ω—å!",
    "üå∫ –¢–∏ –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–∏–π/–Ω–∞, –Ω–µ –∑–∞–±—É–≤–∞–π –ø—Ä–æ —Ü–µ!"
]

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
@dp.message(CommandStart())
async def send_welcome(message: Message):
    user_id = message.from_user.id
    active_users.add(user_id)
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –Ø —Ç–≤—ñ–π –±–æ—Ç, —â–æ –ø—ñ–¥–Ω—ñ–º–∞—î –Ω–∞—Å—Ç—Ä—ñ–π! üéâ")

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∫–æ–∂–Ω—ñ 6 –≥–æ–¥–∏–Ω
async def send_random_messages():
    while True:
        if active_users:
            phrase = random.choice(phrases)
            for user_id in active_users:
                try:
                    await bot.send_message(user_id, phrase)
                except Exception as e:
                    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è {user_id}: {e}")
        await asyncio.sleep(21600)  # 6 –≥–æ–¥–∏–Ω (6 * 60 * 60 —Å–µ–∫—É–Ω–¥)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    asyncio.create_task(send_random_messages())  # –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ñ–æ–Ω–æ–≤—É —Ä–æ–∑—Å–∏–ª–∫—É
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
